#!/bin/sh
#
#  getInactiveNumber
###########################################################################
#
#  Purpose:  This script will determine which public or robot instance is
#            inactive on the given server. It uses the "GlobalConfig.old"
#            sym link in the /usr/local/mgi/live/webshare/config directory
#            and checks which copy of the GlobalConfig file the sym link
#            points to. It should end with a "1" or "2".
#
#  Usage:
#
#      getInactiveNumber  server
#
#      where
#
#          server = the name of the public or robot server where the
#                   webshare instance resides
#
#  Env Vars:  None
#
#  Inputs:  None
#
#  Outputs:
#
#      The inactive instance number (1 or 2) is sent to stdout.
#
#  Exit Codes:
#
#      0:  Successful completion
#      1:  Fatal error occurred
#
#  Assumes:
#
#      1) There is a /usr/local/mgi/live/webshare/config/GlobalConfig.old
#         sym link on the given server.
#
#  Implementation:  See inline comments.
#
#  Notes:  None
#
###########################################################################

if [ $# -ne 1 ]
then
    exit 1
fi

RC=0
SERVER=$1

#
# Use ssh to check the GlobalConfig.old sym link on the given server.
# For public, the link should point to a "GlobalConfig.pub1" or
# "GlobalConfig.pub1" file. For the robot, the link should point to a
# "GlobalConfig.bot1" or "GlobalConfig.bot2" file. Strip off the last
# character of the file name (1 or 2) and save it in the INACTIVE
# environment variable.
#
INACTIVE=`ssh mgiadmin@${SERVER} "ls -l /usr/local/mgi/live/webshare/config/GlobalConfig.old | sed 's/.*\(.\)$/\1/'" 2>/dev/null`

#
# If the inactive number cannot be determined, an error will be returned.
#
if [ "${INACTIVE}" != "1" -a "${INACTIVE}" != "2" ]
then
    RC=1
fi

#
# Echo the inactive number to stdout so it can be picked up by the calling
# script. 
#
echo "${INACTIVE}"

exit ${RC}
